version: "3"

services:
  poll:
    build: "./poll"
    restart: always
    networks:
      - poll-tier
    ports:
      - "5000:80"
    depends_on:
      - redis
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=password"
      - "POSTGRES_DB=postgres"
  redis:
    image: "redis"
    restart: always
    networks:
    - poll-tier
    - back-tier
    ports:
    - "6379"
    environment:
    - "POSTGRES_USER=postgres"
    - "POSTGRES_PASSWORD=password"
    - "POSTGRES_DB=postgres"
  worker:
    build: ./worker
    restart: always
    networks:
    - back-tier
    depends_on:
    - redis
    - db
    environment:
    - "POSTGRES_USER=postgres"
    - "POSTGRES_PASSWORD=password"
    - "POSTGRES_DB=postgres"
  db:
    image: "postgres"
    restart: always
    networks:
    - result-tier
    - back-tier
    container_name: "db"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    environment:
    - "POSTGRES_USER=postgres"
    - "POSTGRES_PASSWORD=password"
    - "POSTGRES_DB=postgres"
  result:
    build: ./result
    restart: always
    networks:
    - result-tier
    ports:
    - "5001:80"
    depends_on:
    - db
    environment:
    - "POSTGRES_USER=postgres"
    - "POSTGRES_PASSWORD=password"
    - "POSTGRES_DB=postgres"
volumes: 
  db-data:

networks:
  poll-tier:
    driver: bridge
  result-tier:
    driver: bridge
  back-tier:
    driver: bridge